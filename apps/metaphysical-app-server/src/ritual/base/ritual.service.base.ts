/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Ritual as PrismaRitual } from "@prisma/client";

export class RitualServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.RitualCountArgs, "select">): Promise<number> {
    return this.prisma.ritual.count(args);
  }

  async rituals(args: Prisma.RitualFindManyArgs): Promise<PrismaRitual[]> {
    return this.prisma.ritual.findMany(args);
  }
  async ritual(
    args: Prisma.RitualFindUniqueArgs
  ): Promise<PrismaRitual | null> {
    return this.prisma.ritual.findUnique(args);
  }
  async createRitual(args: Prisma.RitualCreateArgs): Promise<PrismaRitual> {
    return this.prisma.ritual.create(args);
  }
  async updateRitual(args: Prisma.RitualUpdateArgs): Promise<PrismaRitual> {
    return this.prisma.ritual.update(args);
  }
  async deleteRitual(args: Prisma.RitualDeleteArgs): Promise<PrismaRitual> {
    return this.prisma.ritual.delete(args);
  }
}
